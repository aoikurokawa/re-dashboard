/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category CloseVaultUpdateStateTracker
 * @category generated
 */
export type CloseVaultUpdateStateTrackerInstructionArgs = {
  ncnEpoch: beet.bignum
}
/**
 * @category Instructions
 * @category CloseVaultUpdateStateTracker
 * @category generated
 */
export const CloseVaultUpdateStateTrackerStruct = new beet.BeetArgsStruct<
  CloseVaultUpdateStateTrackerInstructionArgs & {
    instructionDiscriminator: number
  }
>(
  [
    ['instructionDiscriminator', beet.u8],
    ['ncnEpoch', beet.u64],
  ],
  'CloseVaultUpdateStateTrackerInstructionArgs'
)
/**
 * Accounts required by the _CloseVaultUpdateStateTracker_ instruction
 *
 * @property [] config
 * @property [_writable_] vault
 * @property [_writable_] vaultUpdateStateTracker
 * @property [_writable_, **signer**] payer
 * @category Instructions
 * @category CloseVaultUpdateStateTracker
 * @category generated
 */
export type CloseVaultUpdateStateTrackerInstructionAccounts = {
  config: web3.PublicKey
  vault: web3.PublicKey
  vaultUpdateStateTracker: web3.PublicKey
  payer: web3.PublicKey
}

export const closeVaultUpdateStateTrackerInstructionDiscriminator = 28

/**
 * Creates a _CloseVaultUpdateStateTracker_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category CloseVaultUpdateStateTracker
 * @category generated
 */
export function createCloseVaultUpdateStateTrackerInstruction(
  accounts: CloseVaultUpdateStateTrackerInstructionAccounts,
  args: CloseVaultUpdateStateTrackerInstructionArgs,
  programId = new web3.PublicKey('Vau1t6sLNxnzB7ZDsef8TLbPLfyZMYXH8WTNqUdm9g8')
) {
  const [data] = CloseVaultUpdateStateTrackerStruct.serialize({
    instructionDiscriminator:
      closeVaultUpdateStateTrackerInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.config,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.vault,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.vaultUpdateStateTracker,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.payer,
      isWritable: true,
      isSigner: true,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
